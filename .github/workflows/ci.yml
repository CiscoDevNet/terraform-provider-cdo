# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - 'main'
      - 'LH-70847-ci-release'
    tags:
      - 'v*'
env:
  AWS_REGION: "us-west-2"

permissions:
  contents: write

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: provider
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          go-version: '1.20'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: latest
          working-directory: provider
          skip-pkg-cache: true
  scan-for-secrets:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
  generate:
    name: Generate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: provider
    steps:
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          go-version: '1.20'
          cache: true
      - run: go run github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs generate --provider-name cdo --rendered-provider-name "CDO Provider" --rendered-website-dir ../docs
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after docs generation. Run 'go run github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs generate --provider-name cdo --rendered-provider-name \"CDO Provider\" --rendered-website-dir ../docs' command from the provider directory and commit."; exit 1)

  # Run unit tests            
  unit-test:
    name: Terraform Client Unit Tests
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    timeout-minutes: 15
    strategy:
      fail-fast: false
    steps:
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          go-version: '1.20'
          cache: true
      - name: Run Go Test
        run: go test ./...

  # Run acceptance tests in a matrix with Terraform CLI versions on merge to master
  acceptance-test:
    name: Terraform Provider Acceptance Tests
    needs: unit-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: provider
    timeout-minutes: 15
    concurrency: "ci"  # fixed group so that it never parallel, even in different PR
    strategy:
      fail-fast: false
      max-parallel: 1  # acceptance tests create real infra, so no parallel run is enabled
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.3.*'
          - '1.4.*'
          - '1.5.*'
    steps:
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          go-version: '1.20'
          cache: true
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: cat .github-action.env >> $GITHUB_ENV  # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      - env:
          TF_ACC: "1"
          ACC_TEST_CISCO_CDO_API_TOKEN: ${{ secrets.ACC_TEST_CISCO_CDO_API_TOKEN }}
          IOS_RESOURCE_PASSWORD: ${{ secrets.IOS_RESOURCE_PASSWORD }}
          ASA_RESOURCE_SDC_PASSWORD: ${{ secrets.ASA_RESOURCE_SDC_PASSWORD }}
        run: go test -v -cover ./...
        timeout-minutes: 10
  trigger-release:
    needs: [acceptance-tests, unit-test]
    if: github.ref == 'LH-70847-ci-release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Create and push tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#  release:
#    if: github.ref_type == 'tag'
#    runs-on: ubuntu-latest
#    needs: [acceptance-tests, unit-test]
#    steps:
#      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
#        with:
#          # Allow goreleaser to access older tag information.
#          fetch-depth: 0
#      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
#        with:
#          go-version: '1.20'
#          cache: true
#      - name: Import GPG key
#        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef # v6.0.0
#        id: import_gpg
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.PASSPHRASE }}
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
#        with:
#          args: release --clean
#          workdir: provider
#        env:
#          # GitHub sets the GITHUB_TOKEN secret automatically.
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}